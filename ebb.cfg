# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
# serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_4B000F000850415833323720-if00
canbus_uuid: b19d0976b1eb

[temperature_sensor EBB_temp]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 100

[adxl345]
cs_pin: EBBCan:PB12
spi_software_sclk_pin: EBBCan:PB10
spi_software_mosi_pin: EBBCan:PB11
spi_software_miso_pin: EBBCan:PB2
axes_map: x,y,z

# [lis2dw]
# cs_pin: btt_lis2dw:gpio9
# #spi_bus: spi1a
# spi_software_sclk_pin: btt_lis2dw:gpio10
# spi_software_mosi_pin: btt_lis2dw:gpio11
# spi_software_miso_pin: btt_lis2dw:gpio8
# axes_map: x, -z, -y

[extruder]
step_pin: EBBCan:PD0
dir_pin: !EBBCan:PD1
enable_pin: !EBBCan:PD2
microsteps: 32
rotation_distance: 22.225371
gear_ratio: 50:10
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA2
sensor_type: MAX31865
sensor_pin: EBBCan:PA4
spi_bus: spi1
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2
min_temp: -50
max_temp: 320
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 150.0
max_extrude_only_accel: 2500.0
max_extrude_cross_section: 20000.0
min_extrude_temp: -20

control: mpc
heater_power: 50
#   Nameplate heater power in watts. 

#   Note that for a PTC, a non-linear heater, MPC may not work optimally due
#   to the change in power output relative to temperature for this style of
#   heater. Setting heater_power to the power output at the expected printing
#   temperature is recommended.
cooling_fan: fan_generic part_cooling 
#   This is the fan that is cooling extruded filament and the hotend.
#   cooling_fan is supported for [heater_bed] but accurate performance has
#   not been verified.
#   Specifying "fan" will automatically use the part cooling fan.
#   Bed fans could be used for the [heater_bed] by specifying
#   <fan_generic BedFans> for example.
ambient_temp_sensor: temperature_sensor chamber
#   Optional. If this is not given MPC will estimate this parameter
#   (recommended).
#   It can use any sensor, but it should be a temperature sensor in proximity
#   to the hotend or measuring the ambient air surrounding the hotend such as
#   a chamber sensor. 
#   This is used for initial state temperature and calibration but not for
#   actual control.
#   Example sensor: temperature_sensor beacon_coil
filament_diameter: 1.75
#   (mm)
filament_density: 1.2
#   1.2 (g/mm^3) is the default to cover a wide range of standard
#   materials including ABS, ASA, PLA, PETG.
filament_heat_capacity: 1.8
#   1.8 (J/g/K) is the default to cover a wide range of standard
#   materials including ABS, ASA, PLA, PETG.

[tmc2209 extruder]
uart_pin: EBBCan:PA15
run_current: 0.650
interpolate: True

[fan_generic part_cooling]
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10
pin: EBBCan:PA1

[heater_fan hotend_fan]
pin: EBBCan:PA0
heater: extruder
heater_temp: 50.0

#[bltouch]
#sensor_pin: ^EBBCan:PB8
#control_pin: EBBCan:PB9

[probe]
pin: ^EBBCan:PB8
x_offset: 28.0
y_offset: 0.0
z_offset: 9.080
speed: 7
lift_speed: 10
samples_tolerance: 0.1
samples_tolerance_retries: 3
samples: 3
samples_result: average

[filament_switch_sensor sherpa_mini]
# runout_gcode:
insert_gcode:
  LOAD_FILAMENT
switch_pin: ^!EBBCan:PB3

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBCan:PB4